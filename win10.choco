New-Item -Path C:\ -Name Temp -ItemType Directory -ErrorAction SilentlyContinue
New-Item -Path C:\ -Name payloads -ItemType Directory -ErrorAction SilentlyContinue

$env:TEMP = "C:\Temp"
$env:TMP = "C:\Temp"

# Enable TLS 1.3 Support
New-Item -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.3\Client" -force
New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.3\Client" -Name "DisabledByDefault" -Type DWord -Value 0 -force
New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.3\Client" -Name "Enabled" -Type DWord -Value 1 -force

# Defender
$Downloads = Get-ItemPropertyValue 'HKCU:\software\microsoft\windows\currentversion\explorer\shell folders\' -Name '{374DE290-123F-4565-9164-39C4925E467B}'
Add-MpPreference -ExclusionPath $Downloads
Add-MpPreference -ExclusionPath "C:\payloads\"
Add-MpPreference -ExclusionPath "C:\tools\"
Set-MpPreference -MAPSReporting Disabled
Set-MpPreference -SubmitSamplesConsent NeverSend

# UI
Import-Module "$env:ChocolateyInstall\helpers\chocolateyInstaller.psm1" -Force
Set-WindowsExplorerOptions -EnableShowFileExtensions -EnableShowFullPathInTitleBar -EnableExpandToOpenFolder -EnableShowRibbon

New-Item -Path C:\ -Name BGInfo -ItemType Directory -ErrorAction SilentlyContinue
Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/sclow/RTVM/master/wallpaper.jpg' -OutFile "C:\BGInfo\wallpaper.jpg"
Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/sclow/RTVM/master/wallpaper2.jpg' -OutFile "C:\BGInfo\wallpaper2.jpg"
Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/sclow/RTVM/master/wallpaper3.jpg' -OutFile "C:\BGInfo\wallpaper3.jpg"
Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/sclow/RTVM/master/bginfo.bgi' -OutFile "C:\BGInfo\bginfo.bgi"
New-ItemProperty -Path HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\ -Name BGInfo -Value "C:\tools\sysinternals\Bginfo64.exe /accepteula /iC:\BGInfo\bginfo.bgi /timer:0" -Force

# Misc
$DesktopPath = [Environment]::GetFolderPath("Desktop")
Remove-Item -Path "C:\Users\Public\Desktop\Boxstarter Shell.lnk"
Remove-Item -Path C:\Temp\ -Recurse -Force

# Windows config
Enable-RemoteDesktop
Disable-BingSearch
Disable-GameBarTips
# Disable weather widget
$regkey = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Feeds"
$name = "ShellFeedsTaskbarViewMode"
$exists = Get-ItemProperty $regkey $name -ErrorAction SilentlyContinue
if (($exists -eq $null) -or ($exists.Length -eq 0)) {
    Set-ItemProperty -Path $regkey -Name $name -Value 2 -Force
} else {
    New-ItemProperty -Path $regkey -Name $name -Value 2 -Force
}
Set-ItemProperty -Path HKCU:\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager -Name SystemPaneSuggestionsEnabled -Type DWord -Value 0
If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings")) {
    New-Item -Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings" -Force | Out-Null
}
Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Personalization\Settings" -Name "AcceptedPrivacyPolicy" -Type DWord -Value 0
If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization")) {
    New-Item -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization" -Force | Out-Null
}
Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization" -Name "RestrictImplicitTextCollection" -Type DWord -Value 1
Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization" -Name "RestrictImplicitInkCollection" -Type DWord -Value 1
If (!(Test-Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore")) {
    New-Item -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore" -Force | Out-Null
}
Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore" -Name "HarvestContacts" -Type DWord -Value 0
If (!(Test-Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search")) {
    New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Force | Out-Null
}
Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -Name "AllowCortana" -Type DWord -Value 0


# Start Menu: Disable Bing Search Results
Set-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Search -Name BingSearchEnabled -Type DWord -Value 0
# To Restore (Enabled):
# Set-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Search -Name BingSearchEnabled -Type DWord -Value 1

# Change Explorer home screen back to "This PC"
Set-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced -Name LaunchTo -Type DWord -Value 1
# Change it back to "Quick Access" (Windows 10 default)
# Set-ItemProperty -Path HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced -Name LaunchTo -Type DWord -Value 2


# Remove Pre-Installed Apps
Get-AppxPackage *getstarted* | Remove-AppxPackage
Get-AppxPackage *officehub* | Remove-AppxPackage
Get-AppxPackage *3dbuilder* | Remove-AppxPackage
Get-AppxPackage *windowscommunicationsapps* | Remove-AppxPackage
Get-AppxPackage *getstarted* | Remove-AppxPackage
Get-AppxPackage *skypeapp* | Remove-AppxPackage
Get-AppxPackage *solitairecollection* | Remove-AppxPackage
Get-AppxPackage *zunevideo* | Remove-AppxPackage
Get-AppxPackage *bing* | Remove-AppxPackage
Get-AppxPackage *messaging* | Remove-AppxPackage
Get-AppxPackage *Microsoft.people* | Remove-AppxPackage
Get-AppxPackage *ZuneMusic* | Remove-AppxPackage
Get-AppxPackage Microsoft.BingWeather | Remove-AppxPackage


# Default All Printers to A4
get-printer | %{ set-printconfiguration -printerobject $_ -Papersize "a4" }

# Packages
choco feature enable -n allowGlobalConfirmation
#Install-Package NuGet.CommandLine -Force
Install-PackageProvider -Name NuGet -ForceBootstrap -Force
choco install nuget.commandline
choco install 7zip 
choco install git 
## choco install googlechrome --ignore-checksums
choco install googlechrome --package-parameters "/norestart"
choco install heidisql --version=10.2.0.559900 
choco install openjdk11
choco install putty 
choco install sysinternals --params "/InstallDir:C:\tools\sysinternals" --Force
choco install dotpeek --pre --package-parameters "/PerMachine"
##choco install vscode

choco install visualstudio2022community --package-parameters "--allWorkloads --includeRecommended --includeOptional --passive --locale en-US"
#choco install visualstudio2022community --norestart 
#choco install visualstudio2022-workload-azure --norestart --force
#choco install visualstudio2022-workload-data --norestart --force
#choco install visualstudio2022-workload-datascience --norestart --force
#choco install visualstudio2022-workload-manageddesktop --norestart --force
#choco install visualstudio2022-workload-managedgame --norestart --force
#choco install visualstudio2022-workload-nativecrossplat --norestart --force
#choco install visualstudio2022-workload-nativedesktop --norestart --force
#choco install visualstudio2022-workload-nativegame --norestart --force
#choco install visualstudio2022-workload-nativemobile --norestart --force
#choco install visualstudio2022-workload-netcrossplat --norestart --force
#choco install visualstudio2022-workload-netweb --norestart --force
#choco install visualstudio2022-workload-node --norestart --force
#choco install visualstudio2022-workload-office --norestart --force
#choco install visualstudio2022-workload-python --norestart --force
#choco install visualstudio2022-workload-universal --norestart --force
#choco install visualstudio2022-workload-visualstudioextension --norestart --force

# Dotnet build environments
choco install netfx-4.5.2-devpack
choco install netfx-4.6.2-devpack
choco install netfx-4.7.2-devpack

# GitHub
Invoke-WebRequest -Uri https://github.com/dnSpy/dnSpy/releases/latest/download/dnSpy-netframework.zip -OutFile "$env:TEMP\dnSpy-netframework.zip"
Expand-Archive -Path "$env:TEMP\dnSpy-netframework.zip" -DestinationPath C:\tools\dnSpy -Force

git clone https://github.com/BloodHoundAD/SharpHound3.git C:\tools\SharpHound3
git clone https://github.com/dafthack/MailSniper.git C:\tools\MailSniper
git clone https://github.com/decoder-it/juicy-potato.git C:\tools\juicy-potato
git clone https://github.com/djhohnstein/SharpChrome.git C:\tools\SharpChrome
git clone https://github.com/FortyNorthSecurity/Egress-Assess.git C:\tools\Egress-Assess
git clone https://github.com/FSecureLABS/SharpGPOAbuse.git C:\tools\SharpGPOAbuse
git clone https://github.com/gentilkiwi/mimikatz.git C:\tools\mimikatz
git clone https://github.com/GhostPack/Seatbelt.git C:\tools\Seatbelt
git clone https://github.com/HarmJ0y/DAMP.git C:\tools\DAMP
git clone https://github.com/hfiref0x/UACME.git C:\tools\UACME
git clone https://github.com/leechristensen/SpoolSample.git C:\tools\SpoolSample
git clone https://github.com/NetSPI/PowerUpSQL.git C:\tools\PowerUpSQL

git clone https://github.com/p3nt4/PowerShdll.git C:\tools\PowerShdll
Start-Process -Wait -NoNewWindow "c:\programdata\chocolatey\bin\nuget.exe" -ArgumentList '-source "https://api.nuget.org/v3/index.json;https://www.myget.org/F/nuget"' -WorkingDirectory C:\tools\PowerShdll

git clone https://github.com/PowerShellMafia/PowerSploit.git C:\tools\PowerSploit
git clone https://github.com/rasta-mouse/MiscTools.git C:\tools\MiscTools
git clone https://github.com/rasta-mouse/Sherlock.git C:\tools\Sherlock
git clone https://github.com/rasta-mouse/Watson.git C:\tools\Watson
git clone https://github.com/tevora-threat/SharpView.git C:\tools\SharpView
git clone https://github.com/TheWover/donut.git C:\tools\donut
git clone https://github.com/ZeroPointSecurity/PhishingTemplates.git C:\tools\PhishingTemplates
Install-ChocolateyShortcut -shortcutFilePath "C:\Users\Public\Desktop\tools.lnk" -targetPath C:\tools\


# IE first run
New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer" -Force
New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Main" -Force
New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Main" -Name DisableFirstRunCustomize -Value 1 -Force

# BloodHound
Invoke-WebRequest -Uri 'https://github.com/BloodHoundAD/BloodHound/releases/latest/download/BloodHound-win32-x64.zip' -OutFile "$env:TEMP\BloodHound.zip"
Expand-Archive -Path "$env:TEMP\BloodHound.zip" -DestinationPath C:\tools\ -Force
Rename-Item -Path C:\tools\BloodHound-win32-x64\ -NewName BloodHound 
Invoke-WebRequest -Uri 'https://neo4j.com/artifact.php?name=neo4j-community-4.0.0-windows.zip' -OutFile "$env:TEMP\neo4j.zip"
Expand-Archive -Path "$env:TEMP\neo4j.zip" -DestinationPath C:\tools\ -Force
Rename-Item -Path C:\tools\neo4j-community-4.0.0\ -NewName Neo4j
Install-ChocolateyShortcut -shortcutFilePath "C:\Users\Public\Desktop\Neo4j.lnk" -targetPath "C:\tools\Neo4j\bin\neo4j.bat" -arguments "console" -runAsAdmin


## Visual Studio
Invoke-WebRequest -Uri 'https://visualstudioclient.gallerycdn.vsassets.io/extensions/visualstudioclient/microsoftvisualstudio2017installerprojects/1.0.0/1620063166533/InstallerProjects.vsix' -OutFile "$Downloads\InstallerProjects.vsix"
Invoke-WebRequest -Uri 'https://download.microsoft.com/download/E/E/D/EEDF18A8-4AED-4CE0-BEBE-70A83094FC5A/BuildTools_Full.exe' -OutFile "$Downloads\BuildTools.exe"
Enable-WindowsOptionalFeature -FeatureName NetFx3 -Online

# GPRegistryPolicy
Install-Module GPRegistryPolicy -Force

# Networking
## VMware
#netsh interface ip set address "Ethernet1" static 192.168.152.101 255.255.255.0 192.168.152.100

## VBox
#netsh interface ip set address "Ethernet 2" static 192.168.152.101 255.255.255.0 192.168.152.100

#route add -p 10.8.0.0 mask 255.255.255.0 192.168.152.100
#route add -p 10.9.0.0 mask 255.255.255.0 192.168.152.100
#route add -p 10.10.110.0 mask 255.255.255.0 192.168.152.100
#Add-Content C:\Windows\System32\drivers\etc\hosts "192.168.152.100 kali"

# Default extensions
# Use the UI to choose what associate once loaded
#Install-ChocolateyFileAssociation ".sln" "$env:programfiles\Microsoft Visual Studio\2022\Community\Common7\IDE\devenv.exe"
Install-ChocolateyFileAssociation ".dll" "$($Boxstarter.programFiles86)\jetbrains\installations\dotpeek231\dotpeek32.exe"


#--- Restore Temporary Settings ---
#Enable-UAC
#Enable-MicrosoftUpdate
#sInstall-WindowsUpdate -acceptEula
